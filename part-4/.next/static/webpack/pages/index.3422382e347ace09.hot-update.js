"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/plugin/multi-theme-plugin.js":
/*!******************************************!*\
  !*** ./src/plugin/multi-theme-plugin.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar plugin = __webpack_require__(/*! tailwindcss/plugin */ \"./node_modules/tailwindcss/plugin.js\");\nvar colors = __webpack_require__(/*! tailwindcss/colors */ \"./node_modules/tailwindcss/colors.js\");\nvar Color = __webpack_require__(/*! color */ \"./node_modules/color/index.js\");\n// -----------------------------------------------------------------\n// Get RGB channels for a given color\n// -----------------------------------------------------------------\nfunction getRgbChannels(color) {\n    return Color(color).rgb().array().join(\", \");\n}\n// -----------------------------------------------------------------\n// Compose Tailwind's `opacityValue` into the alpha channel\n// -----------------------------------------------------------------\nfunction withOpacityValue(variable) {\n    return function(param) {\n        var opacityValue = param.opacityValue;\n        if (opacityValue !== undefined) {\n            return \"rgba(var(\".concat(variable, \"), \").concat(opacityValue, \")\");\n        }\n        return \"rgb(\".concat(variable, \")\");\n    };\n}\n// -----------------------------------------------------------------\n// Themes definition\n// -----------------------------------------------------------------\nvar themes = [\n    {\n        name: \"default\",\n        colors: {\n            \"text-base\": colors.fuchsia[\"800\"],\n            \"text-inverted\": colors.fuchsia[\"100\"],\n            \"bg-base\": colors.fuchsia[\"100\"],\n            \"bg-inverted\": colors.fuchsia[\"800\"]\n        }\n    },\n    {\n        name: \"swiss\",\n        colors: {\n            \"text-base\": colors.red[\"800\"],\n            \"text-inverted\": colors.red[\"100\"],\n            \"bg-base\": colors.red[\"100\"],\n            \"bg-inverted\": colors.red[\"800\"]\n        }\n    },\n    {\n        name: \"forest\",\n        colors: {\n            \"text-base\": colors.green[\"800\"],\n            \"text-inverted\": colors.green[\"100\"],\n            \"bg-base\": colors.green[\"100\"],\n            \"bg-inverted\": colors.green[\"800\"]\n        }\n    },\n    {\n        name: \"aqua\",\n        colors: {\n            \"text-base\": colors.cyan[\"800\"],\n            \"text-inverted\": colors.cyan[\"100\"],\n            \"bg-base\": colors.cyan[\"100\"],\n            \"bg-inverted\": colors.cyan[\"800\"]\n        }\n    }, \n];\n// -----------------------------------------------------------------\n// Tailwind CSS plugin\n// -----------------------------------------------------------------\nvar multiThemePlugin = plugin(function(param) {\n    var addBase = param.addBase, addVariant = param.addVariant;\n    // -----------------------------------------------------------------\n    // Root scope CSS variables\n    // -----------------------------------------------------------------\n    var defaultColors = themes[0].colors;\n    addBase({\n        \":root\": {\n            \"--color-text-base\": getRgbChannels(defaultColors[\"text-base\"]),\n            \"--color-text-inverted\": getRgbChannels(defaultColors[\"text-inverted\"]),\n            \"--color-bg-base\": getRgbChannels(defaultColors[\"bg-base\"]),\n            \"--color-bg-inverted\": getRgbChannels(defaultColors[\"bg-inverted\"])\n        }\n    });\n    // -----------------------------------------------------------------\n    // Redefine CSS variables for each theme\n    // -----------------------------------------------------------------\n    themes.forEach(function(theme) {\n        var colors1 = theme.colors;\n        addBase(_defineProperty({}, \"[data-theme=\".concat(theme.name, \"]\"), {\n            \"--color-text-base\": getRgbChannels(colors1[\"text-base\"]),\n            \"--color-text-inverted\": getRgbChannels(colors1[\"text-inverted\"]),\n            \"--color-bg-base\": getRgbChannels(colors1[\"bg-base\"]),\n            \"--color-bg-inverted\": getRgbChannels(colors1[\"bg-inverted\"])\n        }));\n    });\n    // BONUS: Add theme-specific variant for bespoke theming overrides\n    themes.forEach(function(theme) {\n        addVariant(\"theme-\".concat(theme.name), \"[data-theme=\".concat(theme.name, \"] &\"));\n    });\n}, // Add semantic color names to Tailwind's color palette\n{\n    theme: {\n        extend: {\n            textColor: {\n                multi: {\n                    base: withOpacityValue(\"--color-text-base\"),\n                    inverted: withOpacityValue(\"--color-text-inverted\")\n                }\n            },\n            backgroundColor: {\n                multi: {\n                    base: withOpacityValue(\"--color-bg-base\"),\n                    inverted: withOpacityValue(\"--color-bg-inverted\")\n                }\n            }\n        }\n    }\n});\nmodule.exports = multiThemePlugin;\nmodule.exports.themesList = themes.map(function(theme) {\n    return theme.name;\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/plugin/multi-theme-plugin.js\n");

/***/ })

});